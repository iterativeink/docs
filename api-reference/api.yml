openapi: 3.1.0
info:
  title: Pulsedive API Reference
  version: "1.0.0"
  description: |
    The Pulsedive API lets you programmatically manage resources within Pulsedive.
    Users can look up known indicators and threats, enrich and investigate indicators, query Pulsedive data, and automate workflows.
    If an API key is provided, the rate limit is higher.

    Please report any discrepancies in API behavior to <a href="mailto:support@pulsedive.com">Pulsedive Support</a>.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    email: support@pulsedive.com

externalDocs:
  url: https://pulsedive.mintlify.app

servers:
  - url: https://www.pulsedive.com

tags:
  - name: Indicators
    description: Look up known indicators.
  - name: Threats
    description: Look up known threats.

paths:
  /api/info.php:
    get:
      security:
        - ApiKeyAuth: [] # Optional authentication
      tags:
        - Indicators
      summary: Get Indicator By Value
      description: |
        Retrieve detailed threat intelligence information for a specific indicator by value.
        To query links and properties, retrieve the indicator by ID instead.
      operationId: getIndicatorByValue
  
      parameters:
        - name: indicator
          in: query
          required: true
          description: Value of the indicator to retrieve. May be a domain name, IP address, or URL.
          oneOf:
            - type: string
              format: ipv4
            - type: string
              format: hostname
            - type: string
              format: uri
          examples:
            ip:
              summary: IPv4 address
              value: 8.8.8.8
            domain:
              summary: Domain name
              value: microsoft.com
            url:
              summary: URL
              value: https://puledive.com/explore
        - name: pretty
          in: query
          required: false
          description: Indicates whether to format returned JSON results.
          schema:
            type: integer
            enum: [0, 1]
            default: 0
          examples:
            compact:
              summary: Compact output
              value: 0
            pretty:
              summary: Pretty-printed output
              value: 1

      responses:
        '200':
          description: Request was successful. Returns indicator information in JSON format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorResponse'

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

        '429':
          $ref: '#/components/responses/TooManyRequests'

        '500':
          $ref: '#/components/responses/InternalServerError'

components:

  schemas:
    IndicatorResponse:
      type: object
      properties:
        qid:
          type: string
          nullable: true
        iid:
          type: integer
        indicator:
          type: string
        type:
          type: string
        risk:
          type: string
        risk_recommended:
          type: string
        manualrisk:
          type: integer
        retired:
          type: string
          nullable: true
        stamp_added:
          type: string
          format: date-time
        stamp_updated:
          type: string
          format: date-time
        stamp_seen:
          type: string
          format: date-time
        stamp_probed:
          type: string
          format: date-time
        stamp_retired:
          type: string
          nullable: true
        recent:
          type: integer
        submissions:
          type: integer
        umbrella_rank:
          type: integer
        umbrella_domain:
          type: string
        riskfactors:
          type: array
          items:
            $ref: '#/components/schemas/RiskFactor'
        redirects:
          type: object
          properties:
            from:
              type: array
              items: {}
            to:
              type: array
              items:
                $ref: '#/components/schemas/Redirect'
        threats:
          type: array
          items: {}
        feeds:
          type: array
          items: {}
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        properties:
          type: object
          properties:
            meta:
              $ref: '#/components/schemas/Meta'
            # Add others here (geo, whois, http, etc.) as needed
          additionalProperties:
            type: object
        cookies:
          type: object
          additionalProperties:
            type: string

    RiskFactor:
      type: object
      properties:
        rfid:
          type: integer
        description:
          type: string
        risk:
          type: string

    Redirect:
      type: object
      properties:
        iid:
          type: integer
        indicator:
          type: string

    Comment:
      type: object
      properties:
        cid:
          type: integer
        username:
          type: string
        title:
          type: string
        comment:
          type: string
        stamp_added:
          type: string
          format: date-time
        stamp_updated:
          type: string
          format: date-time

    Meta:
      type: object
      properties:
        viewport:
          type: string
        charset:
          type: string
        keywords:
          type: string
        description:
          type: string
        author:
          type: string
        version:
          type: string
        assets:
          type: string
          format: uri
        twitter:card:
          type: string
        twitter:site:
          type: string
        twitter:title:
          type: string
        twitter:description:
          type: string
        twitter:creator:
          type: string
        twitter:image:
          type: string
          format: uri
        og:title:
          type: string
        og:description:
          type: string
        og:url:
          type: string
          format: uri
        og:image:
          type: string
          format: uri
        ++title:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Message describing the error that occurred.

  responses:
    BadRequest:
      description: >
        Bad request. The request was malformed or missing required parameters.
        The response includes an `error` field with more information if available.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: >
        Unauthorized. Your API key is missing or invalid.
        The response includes an `error` field describing the issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: >
        Not found. The requested indicator could not be located.
        The response includes an `error` field with details, if available.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    TooManyRequests:
      description: >
        Rate limit exceeded. Too many requests have been made in a short period of time.
        The response includes an `error` field and guidance on when to retry.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: >
        Server error. An unexpected problem occurred on our end.
        These errors are automatically reported to our team. The response includes an `error` field when possible.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: key
